var documenterSearchIndex = {"docs":
[{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"CurrentModule = XtallographyUtils","category":"page"},{"location":"utilities/#Utility-Functions","page":"Utility Functions","title":"Utility Functions","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"","category":"page"},{"location":"utilities/#Math-Functions","page":"Utility Functions","title":"Math Functions","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"asin_\nacos_\nis_basis\nvolume(::Vector{<:Real}, ::Vector{<:Real}, ::Vector{<:Real})\nsurface_area(::Vector{<:Real}, ::Vector{<:Real}, ::Vector{<:Real})","category":"page"},{"location":"utilities/#XtallographyUtils.asin_","page":"Utility Functions","title":"XtallographyUtils.asin_","text":"asin_(x::Real; rtol::Real) -> Float64\n\nCompute the arcsin of x with a tolerance for values of x that are slightly outside of the mathematical domain [-1, 1].\n\nWhen the value of x is approximately equal to 1, asin_(x) returns π / 2; when the value of x is approximately equal to -1, asin_(x) returns -π / 2.\n\nReturn values\n\narcsin of x\n\nExamples\n\njulia> asin_(0.5) ≈ π / 6\ntrue\njulia> asin_(1 + eps(1.0)) == π / 2\ntrue\njulia> asin_(-1 - eps(1.0)) == -π / 2\ntrue\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.acos_","page":"Utility Functions","title":"XtallographyUtils.acos_","text":"acos_(x::Real; rtol::Real) -> Float64\n\nCompute the arccos of x with a tolerance for values of x that are slightly outside of the mathematical domain [-1, 1].\n\nWhen the value of x is approximately equal to 1, acos_(x) returns 0; when the value of x is approximately equal to -1, acos_(x) returns π.\n\nReturn values\n\narccos of x\n\nExamples\n\njulia> acos_(0.5) ≈ π / 3\ntrue\njulia> acos_(1 + eps(1.0)) == 0\ntrue\njulia> acos_(-1 - eps(1.0)) == π\ntrue\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.is_basis","page":"Utility Functions","title":"XtallographyUtils.is_basis","text":"is_basis(v1::Vector{Real}, v2::Vector{Real}, v3::Vector{Real}) -> Bool\n\nDetermine if the vectors v1, v2, and v3 are a basis for a three-dimensional lattice (i.e., v1, v2, and v3 are linearly independent).\n\nReturn values\n\ntrue if v1, v2, and v3 are a basis; false otherwise\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.volume-Tuple{Vector{<:Real}, Vector{<:Real}, Vector{<:Real}}","page":"Utility Functions","title":"XtallographyUtils.volume","text":"volume(v1::Vector{Real}, v2::Vector{Real}, v3::Vector{Real}) -> Float64\n\nCompute the volume of the parallelipiped defined by the vectors v1, v2, and v3.\n\nReturn values\n\nvolume of the parallelipiped defined by v1, v2, and v3\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/#XtallographyUtils.surface_area-Tuple{Vector{<:Real}, Vector{<:Real}, Vector{<:Real}}","page":"Utility Functions","title":"XtallographyUtils.surface_area","text":"surface_area(v1::Vector{Real}, v2::Vector{Real}, v3::Vector{Real}) -> Float64\n\nCompute the surface area of the parallelipiped defined by the vectors v1, v2, and v3.\n\nReturn values\n\nsurface area of the parallelipiped defined by v1, v2, and v3\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"","category":"page"},{"location":"utilities/#LatticeConstant-Functions","page":"Utility Functions","title":"LatticeConstant Functions","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"lattice_system\nstandardize(::LatticeConstants, ::Centering)\nstandardize(::LatticeConstants)","category":"page"},{"location":"utilities/#XtallographyUtils.lattice_system","page":"Utility Functions","title":"XtallographyUtils.lattice_system","text":"lattice_system(lattice_constants::LatticesConstants) -> LatticeSystem\n\nReturn the lattice system for a set of lattice_constants.\n\nReturn values\n\nlattice system\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.standardize-Tuple{LatticeConstants, Centering}","page":"Utility Functions","title":"XtallographyUtils.standardize","text":"standardize(\n    lattice_constants::LatticeConstants, centering::Centering\n) -> (LatticeConstants, Centering)\n\nStandardize the lattice constants and centering for the unit cell defined by lattice_constants and centering.\n\nReturn values\n\nstandardized lattice constants and centering\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/#XtallographyUtils.standardize-Tuple{LatticeConstants}","page":"Utility Functions","title":"XtallographyUtils.standardize","text":"standardize(lattice_constants::LatticeConstants) -> LatticeConstants\n\nStandardize the lattice constants the primitive unit cell defined by lattice_constants.\n\nReturn values\n\nstandardized lattice constants for primitive unit cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"","category":"page"},{"location":"utilities/#Unit-Cell-Function","page":"Utility Functions","title":"Unit Cell Function","text":"","category":"section"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"standardize(::UnitCell)\nbasis\nvolume(::UnitCell)\nsurface_area(::UnitCell)\nconventional_cell\nreduced_cell\nis_equivalent_unit_cell\nis_supercell","category":"page"},{"location":"utilities/#XtallographyUtils.standardize-Tuple{UnitCell}","page":"Utility Functions","title":"XtallographyUtils.standardize","text":"standardize(unit_cell::UnitCell) -> LatticeConstants\n\nStandardize the lattice constants and centering for unit_cell.\n\nnote: Note\nThis function only enforces lattice constant constraints. It does not modify the Bravais lattice type. To find an equivalent Bravais lattice with higher symmetry (if one exists), use conventional_cell().\n\nnote: Note\nLattice constant standardizations are based on the conventions provided in the Table 3.1.4.1. of the International Tables for Crystallography (2016). For triclinic lattices, the lattice constants are standardized using the following conventions:a ≤ b ≤ c\nall three angles are acute (Type I cell) or all three angles are non-acute (Type II cell)\nangles sorted in increasing order when edge lengths are equal\nα ≤ β when a = b\nβ ≤ γ when b = c\nα ≤ β ≤ γ when a = b = c\n\nnote: Note\nExcept for monoclinic lattices, standardize() does not modify the unit cell.For monoclinic lattices, the unit cell may be potentially modified in two ways:the 2D unit cell in the plane normal to the b-axis may be reduced in order to satisfy the IUCr conventions for a, c, and β;\nbase-centered unit cells are transformed to equivalent body-centered unit cells.\n\nReturn values\n\nunit cell with standardized lattice constants and centering\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/#XtallographyUtils.basis","page":"Utility Functions","title":"XtallographyUtils.basis","text":"basis(unit_cell::UnitCell) -> (Vector{Float64}, Vector{Float64}, Vector{Float64})\n\nbasis(\n    lattice_constants::LatticeConstants\n) -> (Vector{Float64}, Vector{Float64}, Vector{Float64})\n\nReturn a set of basis vectors veca vecb vecc for the unit cell defined by unit_cell or lattice_constants.\n\nReturn values\n\nbasis vectors veca, vecb, vecc\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.volume-Tuple{UnitCell}","page":"Utility Functions","title":"XtallographyUtils.volume","text":"volume(unit_cell::UnitCell) -> Float64\n\nvolume(lattice_constants::LatticeConstants) -> Float64\n\nvolume(\n    basis_a::Vector{<:Real}, basis_b::Vector{<:Real}, basis_c::Vector{<:Real}\n) -> Float64\n\nCompute the volume of the unit cell defined by unit_cell, lattice_constants, or the basis vectors [basis_a, basis_b, basis_c].\n\nReturn values\n\nvolume of the unit cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"method"},{"location":"utilities/#XtallographyUtils.surface_area-Tuple{UnitCell}","page":"Utility Functions","title":"XtallographyUtils.surface_area","text":"surface_area(unit_cell::UnitCell) -> Float64\n\nsurface_area(lattice_constants::LatticeConstants) -> Float64\n\nsurface_area(\n    basis_a::Vector{<:Real}, basis_b::Vector{<:Real}, basis_c::Vector{<:Real}\n) -> Float64\n\nCompute the surface area of the unit cell defined by unit_cell, lattice_constants, or the basis vectors [basis_a, basis_b, basis_c].\n\nReturn values\n\nsurface area of the unit cell\n\nExamples\n\njulia> S = surface_area([1, 0, 0], [1, 1, 0], [1, 0, 1]);\n\njulia> S ≈ 4 * (1 + sqrt(3)/2)\ntrue\n\n\n\n\n\n","category":"method"},{"location":"utilities/#XtallographyUtils.conventional_cell","page":"Utility Functions","title":"XtallographyUtils.conventional_cell","text":"conventional_cell(unit_cell::UnitCell) -> UnitCell\n\nReturn the IUCr conventional cell that is equivalent to unit_cell.\n\nReturn values\n\nIUCr conventional cell for unit_cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.reduced_cell","page":"Utility Functions","title":"XtallographyUtils.reduced_cell","text":"reduced_cell(unit_cell::UnitCell) -> UnitCell\n\nCompute the primitive reduced cell for the lattice defined by unit_cell. The Selling-Delaunay reduction algorithm is used to compute the reduced basis.\n\nReturn values\n\nprimitive reduced cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.is_equivalent_unit_cell","page":"Utility Functions","title":"XtallographyUtils.is_equivalent_unit_cell","text":"is_equivalent_unit_cell(\n    unit_cell_test::UnitCell,\n    unit_cell_ref::UnitCell;\n    tol::Real=1e-3\n) -> Bool\n\nCheck if the unit cell defined by unit_cell_test is equivalent to the unit cell defined by unit_cell_ref.\n\nKeyword Arguments\n\ntol: absolute tolerance of the deviation between the reduced unit cells defined by unit_cell_test and unit_cell_ref.\n\nReturn values\n\ntrue if the test unit cell is equivalent to the reference unit cell; false otherwise\n\nExamples\n\nTODO\n\n\n\n\n\nis_equivalent_unit_cell(\n    lattice_constants_test::LatticeConstants,\n    lattice_constants_ref::LatticeConstants;\n    tol::Real=1e-3\n) -> Bool\n\nCheck if the primitive unit cell defined by lattice_constants_test is equivalent to the unit cell defined by lattice_constants_ref.\n\nKeyword Arguments\n\ntol: absolute tolerance of the deviation between the reduced unit cells defined by lattice_constants_test and lattice_constants_ref.\n\nReturn values\n\ntrue if the test unit cell is equivalent to the reference unit cell; false otherwise\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.is_supercell","page":"Utility Functions","title":"XtallographyUtils.is_supercell","text":"is_supercell(\n    lattice_constants_test::LatticeConstants,\n    lattice_constants_ref::LatticeConstants;\n    tol::Real=1e-3,\n    max_index::Integer=3\n) -> Bool\n\nCheck if the unit cell defined by lattice_constants_test is a supercell of the unit cell defined by lattice_constants_ref.\n\nKeyword Arguments\n\ntol: absolute tolerance of the deviation between test unit cell and supercells of the reference unit cell\nmax_index: maximum multiple of the basis vectors of the reference unit cell to include when checking whether the test unit cell is a supercell of the reference unit cell\nnote: Note\nmax_index is ignored for Cubic lattice systems.\n\nReturn values\n\ntrue if the test unit cell is a supercell of the reference unit cell; false otherwise\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"Triclinic Unit Cell Functions","category":"page"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"is_triclinic_type_I_cell\nconvert_to_body_centering\nconvert_to_base_centering\nconvert_to_mP\nconvert_to_mI\nconvert_to_mC\nsatisfies_triclinic_angle_constraints","category":"page"},{"location":"utilities/#XtallographyUtils.is_triclinic_type_I_cell","page":"Utility Functions","title":"XtallographyUtils.is_triclinic_type_I_cell","text":"is_triclinic_type_I_cell(lattice_constants::TriclinicLatticeConstants) -> Bool\n\nDetermine whether the unit cell defined by lattice_constants is a Type I or Type II cell.\n\nReturn values\n\ntrue if lattice_constants defines a Type I cell; false if lattice_constants defines a Type II cell.\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.convert_to_body_centering","page":"Utility Functions","title":"XtallographyUtils.convert_to_body_centering","text":"convert_to_body_centering(\n    lattice_constants::MonoclinicLatticeConstants\n) -> MonoclinicLatticeConstants\n\nConvert a base-centered monoclinic unit cell to body-centered monoclinic unit cell.\n\nReturn values\n\nlattice constants for equivalent body-centered unit cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.convert_to_base_centering","page":"Utility Functions","title":"XtallographyUtils.convert_to_base_centering","text":"convert_to_base_centering(\n    lattice_constants::MonoclinicLatticeConstants\n) -> MonoclinicLatticeConstants\n\nConvert a body-centered monoclinic unit cell to base-centered monoclinic unit cell.\n\nReturn values\n\nlattice constants for equivalent base-centered unit cell\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.convert_to_mP","page":"Utility Functions","title":"XtallographyUtils.convert_to_mP","text":"convert_to_mP(\n    lattice_constants::TriclinicLatticeConstants\n) -> MonoclinicLatticeConstants\n\nAttempt to convert the triclinic unit cell defined by lattice_constants to an equivalent primitive monoclinic unit cell.\n\nReturn values\n\nlattice constants for the equivalent primitive monoclinic unit cell if one exists\n\nExceptions\n\nThrows an ErrorException if the triclinic unit cell defined by lattice_constants is not equivalent to a primitive monoclinic unit cell.\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.convert_to_mI","page":"Utility Functions","title":"XtallographyUtils.convert_to_mI","text":"convert_to_mI(\n    lattice_constants::TriclinicLatticeConstants\n) -> MonoclinicLatticeConstants\n\nAttempt to convert the triclinic unit cell defined by lattice_constants to an equivalent body-centered monoclinic unit cell.\n\nReturn values\n\nlattice constants for the equivalent body-centered monoclinic unit cell if one exists; nothing otherwise\n\nExceptions\n\nThrows an ErrorException if the triclinic unit cell defined by lattice_constants is not equivalent to a body-centered monoclinic unit cell.\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.convert_to_mC","page":"Utility Functions","title":"XtallographyUtils.convert_to_mC","text":"convert_to_mC(\n    lattice_constants::TriclinicLatticeConstants\n) -> MonoclinicLatticeConstants\n\nAttempt to convert the triclinic unit cell defined by lattice_constants to an equivalent base-centered monoclinic unit cell.\n\nReturn values\n\nlattice constants for the equivalent base-centered monoclinic unit cell if one exists; nothing otherwise\nwarn: Warn\nReturned lattice constants are not guaranteed to be standardized.\n\nExceptions\n\nThrows an ErrorException if the triclinic unit cell defined by lattice_constants is not equivalent to a base-centered monoclinic unit cell.\n\n\n\n\n\n","category":"function"},{"location":"utilities/#XtallographyUtils.satisfies_triclinic_angle_constraints","page":"Utility Functions","title":"XtallographyUtils.satisfies_triclinic_angle_constraints","text":"satisfies_triclinic_angle_constraints(α::Real, β::Real, γ::Real) -> Bool\n\nDetermine whether α, β, and γ satisfy the angle constraints for triclinic lattices.\n\nReturn values\n\ntrue if (α, β, γ) form a valid triple of angles for a triclinic unit cell; false otherwise\n\nExamples\n\njulia> satisfies_triclinic_angle_constraints(π/4, π/5, π/6)\ntrue\njulia> satisfies_triclinic_angle_constraints(3π/4, 4π/5, 5π/6)\nfalse\n\n\n\n\n\n","category":"function"},{"location":"utilities/","page":"Utility Functions","title":"Utility Functions","text":"","category":"page"},{"location":"docs-index/#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"docs-index/","page":"Index","title":"Index","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = XtallographyUtils","category":"page"},{"location":"#XtallographyUtils","page":"Home","title":"XtallographyUtils","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for XtallographyUtils.","category":"page"},{"location":"","page":"Home","title":"Home","text":"XtallographyUtils","category":"page"},{"location":"#XtallographyUtils.XtallographyUtils","page":"Home","title":"XtallographyUtils.XtallographyUtils","text":"The XtallographyUtils package provides utility functions for analysis of 3D crystals.\n\n\n\n\n\n","category":"module"},{"location":"types/","page":"Types","title":"Types","text":"CurrentModule = XtallographyUtils","category":"page"},{"location":"types/#Core-Types","page":"Types","title":"Core Types","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"LatticeSystem\nCentering","category":"page"},{"location":"types/#Unit-Cell-Types","page":"Types","title":"Unit Cell Types","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"LatticeConstants\nUnitCell","category":"page"},{"location":"types/","page":"Types","title":"Types","text":"","category":"page"},{"location":"types/#LatticeSytem","page":"Types","title":"LatticeSytem","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"LatticeSystem\nTriclinic\nMonoclinic\nOrthorhombic\nHexagonal\nRhombohedral\nTetragonal\nCubic","category":"page"},{"location":"types/#XtallographyUtils.LatticeSystem","page":"Types","title":"XtallographyUtils.LatticeSystem","text":"LatticeSystem\n\nSupertype for the seven lattice systems in 3D\n\nSubtypes\n\nTriclinic, Monoclinic, Orthorhombic, Hexagonal, Rhombohedral, Tetragonal, Cubic\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Triclinic","page":"Types","title":"XtallographyUtils.Triclinic","text":"Triclinic\n\nType representing the triclinic lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Monoclinic","page":"Types","title":"XtallographyUtils.Monoclinic","text":"Monoclinic\n\nType representing the monoclinic lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Orthorhombic","page":"Types","title":"XtallographyUtils.Orthorhombic","text":"Orthorhombic\n\nType representing the orthorhombic lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Hexagonal","page":"Types","title":"XtallographyUtils.Hexagonal","text":"Hexagonal\n\nType representing the hexagonal lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Rhombohedral","page":"Types","title":"XtallographyUtils.Rhombohedral","text":"Rhombohedral\n\nType representing the rhombohedral lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Tetragonal","page":"Types","title":"XtallographyUtils.Tetragonal","text":"Tetragonal\n\nType representing the tetragonal lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Cubic","page":"Types","title":"XtallographyUtils.Cubic","text":"Cubic\n\nType representing the cubic lattice system\n\nSupertype: LatticeSystem\n\n\n\n\n\n","category":"type"},{"location":"types/","page":"Types","title":"Types","text":"","category":"page"},{"location":"types/#Centering","page":"Types","title":"Centering","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"Centering\nPrimitive\nBaseCentered\nBodyCentered\nFaceCentered","category":"page"},{"location":"types/#XtallographyUtils.Centering","page":"Types","title":"XtallographyUtils.Centering","text":"Centering\n\nSupertype for the four lattice centerings in 3D\n\nSubtypes\n\nPrimitive, BaseCentered, BodyCentered, FaceCentered\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.Primitive","page":"Types","title":"XtallographyUtils.Primitive","text":"Primitive\n\nType representing no centering\n\nSupertype: Centering\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.BaseCentered","page":"Types","title":"XtallographyUtils.BaseCentered","text":"BaseCentered\n\nType representing base centering\n\nnote: Note\nBy convention, base-centering is on the C-face of the unit cell.\n\nSupertype: Centering\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.BodyCentered","page":"Types","title":"XtallographyUtils.BodyCentered","text":"BodyCentered\n\nType representing body centering\n\nSupertype: Centering\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.FaceCentered","page":"Types","title":"XtallographyUtils.FaceCentered","text":"FaceCentered\n\nType representing face centering\n\nSupertype: Centering\n\n\n\n\n\n","category":"type"},{"location":"types/#Interface","page":"Types","title":"Interface","text":"","category":"section"},{"location":"types/#Functions","page":"Types","title":"Functions","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"is_bravais_lattice","category":"page"},{"location":"types/#XtallographyUtils.is_bravais_lattice","page":"Types","title":"XtallographyUtils.is_bravais_lattice","text":"is_bravais_lattice(lattice_system::LatticeSystem, centering::Centering) -> Bool\n\nis_bravais_lattice(unit_cell::UnitCell) -> Bool\n\nDetermine if the unit cell defined by unit_cell or lattice_system and centering is a valid Bravais lattice type.\n\nReturn values\n\ntrue if lattice_system and centering define a valid Bravais lattice type; false otherwise\n\nExamples\n\nTODO\n\n\n\n\n\n","category":"function"},{"location":"types/","page":"Types","title":"Types","text":"","category":"page"},{"location":"types/#LatticeConstants","page":"Types","title":"LatticeConstants","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"LatticeConstants\nTriclinicLatticeConstants\nMonoclinicLatticeConstants\nOrthorhombicLatticeConstants\nHexagonalLatticeConstants\nRhombohedralLatticeConstants\nTetragonalLatticeConstants\nCubicLatticeConstants","category":"page"},{"location":"types/#XtallographyUtils.LatticeConstants","page":"Types","title":"XtallographyUtils.LatticeConstants","text":"LatticeConstants\n\nSupertype for lattice constants for the seven lattice systems in 3D\n\nSubtypes\n\nTriclinicLatticeConstants, MonoclinicLatticeConstants, OrthorhombicLatticeConstants, TetragonalLatticeConstants, RhombohedralLatticeConstants, HexagonalLatticeConstants, CubicLatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.TriclinicLatticeConstants","page":"Types","title":"XtallographyUtils.TriclinicLatticeConstants","text":"TriclinicLatticeConstants\n\nLattice constants for a triclinic unit cell\n\nFields\n\na, b, c: lengths of the edges of the unit cell\nα, β, γ: angles between edges of the unit cell in the planes of the faces of the unit cell\n\nnote: Note\nThe constraints that valid triclinic unit cell angles must satisfy are not enforced by the constructor. It is acceptable to construct TriclinicLatticeConstants with invalid values for α, β, and γ.\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.MonoclinicLatticeConstants","page":"Types","title":"XtallographyUtils.MonoclinicLatticeConstants","text":"MonoclinicLatticeConstants\n\nLattice constants for a monoclinic unit cell\n\nFields\n\na, b, c: lengths of the edges of the unit cell\nβ: angle between edges of the unit cell in the plane of the face of the unit cell where the edges are not orthogonal\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.OrthorhombicLatticeConstants","page":"Types","title":"XtallographyUtils.OrthorhombicLatticeConstants","text":"OrthorhombicLatticeConstants\n\nLattice constants for an orthorhombic unit cell\n\nFields\n\na, b, c: lengths of the edges of the unit cell\n\nnote: Note\nBy convention, edge lengths of the unit cell are ordered so that a <= b <= c.\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.HexagonalLatticeConstants","page":"Types","title":"XtallographyUtils.HexagonalLatticeConstants","text":"HexagonalLatticeConstants\n\nLattice constants for a hexagonal unit cell\n\nFields\n\na, c: lengths of the edges of the unit cell\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.RhombohedralLatticeConstants","page":"Types","title":"XtallographyUtils.RhombohedralLatticeConstants","text":"RhombohedralLatticeConstants\n\nLattice constants for a rhombohedral unit cell\n\nFields\n\na: length of the edge of the unit cell\nα: angle between edges of the unit cell in the plane of the faces of the unit cell\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.TetragonalLatticeConstants","page":"Types","title":"XtallographyUtils.TetragonalLatticeConstants","text":"TetragonalLatticeConstants\n\nLattice constants for a tetragonal unit cell\n\nFields\n\na, c: lengths of the edges of the unit cell\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#XtallographyUtils.CubicLatticeConstants","page":"Types","title":"XtallographyUtils.CubicLatticeConstants","text":"CubicLatticeConstants\n\nLattice constants for a cubic unit cell\n\nFields\n\na: length of the edge of the unit cell\n\nSupertype: LatticeConstants\n\n\n\n\n\n","category":"type"},{"location":"types/#Interface-2","page":"Types","title":"Interface","text":"","category":"section"},{"location":"types/#Functions-2","page":"Types","title":"Functions","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"","category":"page"},{"location":"types/#UnitCell","page":"Types","title":"UnitCell","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"UnitCell","category":"page"},{"location":"types/#XtallographyUtils.UnitCell","page":"Types","title":"XtallographyUtils.UnitCell","text":"UnitCell\n\nUnit cell for a lattice\n\nFields\n\nlattice_constants: lattice constants of unit cell\ncentering: centering of unit cell\n\n\n\n\n\n","category":"type"},{"location":"types/#Interface-3","page":"Types","title":"Interface","text":"","category":"section"},{"location":"types/#Functions-3","page":"Types","title":"Functions","text":"","category":"section"},{"location":"types/","page":"Types","title":"Types","text":"","category":"page"}]
}
